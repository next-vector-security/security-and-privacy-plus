# ********************************************************************
#
#  File        :  fingerprint.filter
#
#  Purpose     :  Filters to prevent pages from canvas fingerprinting
#
#################################################################################
#
# Syntax:
#
# Generally filters start with a line like "FILTER: name description".
# They are then referrable from the actionsfile with +filter{name}
#
# FILTER marks a filter as content filter, other filter
# types are CLIENT-HEADER-FILTER, CLIENT-HEADER-TAGGER,
# SERVER-HEADER-FILTER and SERVER-HEADER-TAGGER.
#
# Inside the filters, write one Perl-Style substitution (job) per line.
# Jobs that precede the first FILTER: line are ignored.
#
# For Details see the pcrs manpage contained in this distribution.
# (and the perlre, perlop and pcre manpages)
#
# Note that you are free to choose the delimiter as you see fit.
#
# Note2: In addition to the Perl options gimsx, the following nonstandard
# options are supported:
#
# 'U' turns the default to ungreedy matching.  Add ? to quantifiers to
#     switch back to greedy.
#
# 'T' (trivial) prevents parsing for backreferences in the substitute.
#     Use if you want to include text like '$&' in your substitute without
#     quoting.
#
# 'D' (Dynamic) allows the use of variables. Supported variables are:
#     $host, $listen-address, $origin (the IP address the request came
#     from), $path and $url.
#
#     Note that '$' is a bad choice as delimiter for dynamic filters as you
#     might end up with unintended variables if you use a variable name
#     directly after the delimiter. Variables will be resolved without
#     escaping anything, therefore you also have to be careful not to chose
#     delimiters that appear in the replacement text. For example '<' should
#     be save, while '?' will sooner or later cause conflicts with $url.
#
#################################################################################

FILTER: prevent-canvas-fingerprint Block canvas fingerprinting JS
s+([^'"]\s*<head.*>)(?=\s*[^'"])+$1<script language='javascript'>function privoxyCanvasNothing() {return null;}; function privoxyDataURL(){return 'data:,';}; function privoxyCanvasFalse(){return false;}</script>+isU
s|(\w+)\.getImageData|privoxyCanvasNothing|gm
s|(\w+)\.toDataURL|privoxyDataURL|gm
s|(\w+)\.isPointInPath|privoxyCanvasFalse|gm
s|(\w+)\.isPointInStroke|privoxyCanvasFalse|gm
s|(\w+)\.mozGetAsFile|privoxyCanvasNothing|gm
s|(\w+)\.toBlob|privoxyCanvasNothing|gm
s|(\w+)\.readPixels|privoxyCanvasNothing|gm
s|(\w+)\.convertToBlob|privoxyCanvasNothing|gm
s|(\w+)\.offscreenToBlob|privoxyCanvasNothing|gm

FILTER: prevent-audio-fingerprint Block audio fingerprinting JS
s+([^'"]\s*<head.*>)(?=\s*[^'"])+$1<script language='javascript'>function privoxyAudioNothing() {return null;}; </script>+isU
s|(\w+)\.getFloatFrequencyData|privoxyAudioNothing|gm
s|(\w+)\.getByteFrequencyData|privoxyAudioNothing|gm
s|(\w+)\.getFloatTimeDomainData|privoxyAudioNothing|gm
s|(\w+)\.getByteTimeDomainData|privoxyAudioNothing|gm
s|(\w+)\.getChannelData|privoxyAudioNothing|gm
s|(\w+)\.copyFromChannel|privoxyAudioNothing|gm
s|(\w+)\.getFrequencyResponse|privoxyAudioNothing|gm

FILTER: prevent-domrect-fingerprint Block DOMRect fingerprinting JS
s+([^'"]\s*<head.*>)(?=\s*[^'"])+$1<script language='javascript'>function privoxyDOMRectNothing() {return null;}; </script>+isU
s|(\w+)\.getClientRects|privoxyDOMRectNothing|gm
s|(\w+)\.getBoundingClientRect|privoxyDOMRectNothing|gm
s|(\w+)\.getBoxQuads|privoxyDOMRectNothing|gm
s|(\w+)\.getBBox|privoxyDOMRectNothing|gm
s|(\w+)\.getStartPositionOfChar|privoxyDOMRectNothing|gm
s|(\w+)\.getEndPositionOfChar|privoxyDOMRectNothing|gm
s|(\w+)\.getExtentOfChar|privoxyDOMRectNothing|gm
s|(\w+)\.getPointAtLength|privoxyDOMRectNothing|gm

